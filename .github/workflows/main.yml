name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
    - LICENSE
    - README.md
    - 'configs**'
    - '**.sln'
    - '**.vcxproj**'
  pull_request:
    paths-ignore:
    - LICENSE
    - README.md
    - 'configs**'
    - '**.sln'
    - '**.vcxproj**'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    env:
        HL2SDKCS2: ${{ github.workspace }}/CS2Fixes/sdk
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
          - os: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: CS2Fixes

      - name: Checkout Metamod
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/metamod-source
          ref: master
          path: mmsource-2.0
          submodules: recursive

      - name: Setup Python 3.9
        uses: actions/setup-python@v4.7.1
        with:
          python-version: 3.9

      - name: Install AMBuild
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install git+https://github.com/alliedmodders/ambuild

      - name: Find Visual C++ compilers and make all environment variables global (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          :: See https://github.com/microsoft/vswhere/wiki/Find-VC
          for /f "usebackq delims=*" %%i in (`vswhere -latest -property installationPath`) do (
            call "%%i"\Common7\Tools\vsdevcmd.bat -arch=x86 -host_arch=x64
          )

          :: Loop over all environment variables and make them global.
          for /f "delims== tokens=1,2" %%a in ('set') do (
            echo>>"%GITHUB_ENV%" %%a=%%b
          )

      - name: Checkout hl2sdk-cs2
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/hl2sdk
          ref: cs2
          path: CS2Fixes/sdk
          
      - name: Checkout protobuf-3.21.8
        uses: actions/checkout@v4
        with:
          repository: protocolbuffers/protobuf
          ref: 21.x
          path: CS2Fixes/vendor/protobuf-3.21.8

      - name: Build
        working-directory: CS2Fixes
        shell: bash
        run: |
          mkdir build && cd build
          python ../configure.py --enable-optimize --symbol-files --sdks cs2
          ambuild
          
      - name: Uploading package
        uses: actions/upload-artifact@v3
        with:
          name: CS2Fixes-${{ matrix.os }}-${{ env.GITHUB_SHA_SHORT }}
          path: CS2Fixes/build/package
